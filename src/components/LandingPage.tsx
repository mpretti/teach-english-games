import React from 'react';

interface Game {
  id: string;
  title: string;
  titleKorean: string;
  theme: string;
  themeKorean: string;
  description: string;
  descriptionKorean: string;
  skills: string[];
  vocabulary: string[];
  grammar: string[];
  emoji: string;
  color: string;
  available: boolean;
}

const games: Game[] = [
  {
    id: 'point-salad',
    title: 'Point Salad',
    titleKorean: 'Ìè¨Ïù∏Ìä∏ ÏÉêÎü¨Îìú',
    theme: 'Making salads with vegetables',
    themeKorean: 'ÏïºÏ±ÑÎ°ú ÏÉêÎü¨Îìú ÎßåÎì§Í∏∞',
    description: 'Students shop for vegetables to make a variety of salads, scoring points for efficiently using their groceries.',
    descriptionKorean: 'ÌïôÏÉùÎì§Ïù¥ ÏïºÏ±ÑÎ•º Íµ¨Îß§Ìï¥ÏÑú Îã§ÏñëÌïú ÏÉêÎü¨ÎìúÎ•º ÎßåÎì§Î©∞, ÏãùÎ£åÌíàÏùÑ Ìö®Ïú®Ï†ÅÏúºÎ°ú ÏÇ¨Ïö©Ìï¥ÏÑú Ï†êÏàòÎ•º ÏñªÎäî Í≤åÏûÑÏûÖÎãàÎã§.',
    skills: ['English', 'Math', 'Probability', 'Resource Management', 'Risk Management'],
    vocabulary: ['carrots', 'onions', 'lettuce', 'cabbage', 'tomatoes', 'bell peppers'],
    grammar: ['singular/plural', 'countable/uncountable nouns', 'future tense', 'articles', 'expressing quantities'],
    emoji: 'ü•ó',
    color: 'from-green-400 to-emerald-600',
    available: true
  },
  {
    id: 'for-sale',
    title: 'For Sale',
    titleKorean: 'Î∂ÄÎèôÏÇ∞ Ìè¨ÏÑ∏Ïùº',
    theme: 'Buying and selling real estate',
    themeKorean: 'Î∂ÄÎèôÏÇ∞ Îß§Îß§',
    description: 'Students act as wealthy real estate brokers participating in auctions to purchase bad-to-good real estate in hopes of selling them off for a profit later.',
    descriptionKorean: 'ÌïôÏÉùÎì§Ïù¥ Î∂ÄÏú†Ìïú Î∂ÄÎèôÏÇ∞ Ï§ëÍ∞úÏù∏Ïù¥ ÎêòÏñ¥ Í≤ΩÎß§Ïóê Ï∞∏Ïó¨ÌïòÍ≥†, ÎÇòÏ§ëÏóê Ïù¥ÏùµÏùÑ ÏúÑÌï¥ Î∂ÄÎèôÏÇ∞ÏùÑ ÏÇ¨Í≥†ÌååÎäî Í≤åÏûÑÏûÖÎãàÎã§.',
    skills: ['English', 'Math', 'Probability', 'Social Awareness', 'Resource Management', 'Risk Management', 'Budgeting'],
    vocabulary: ['house', 'apartment', 'office tower', 'condominium', 'estate', 'to bid', 'spent', 'won', 'pass', 'sold'],
    grammar: ['simple future/past', 'expressing results', 'possessive pronouns', 'expressing immediate plans', 'expressing desires'],
    emoji: 'üè†',
    color: 'from-blue-400 to-indigo-600',
    available: true
  },
  {
    id: 'survive',
    title: 'Survive',
    titleKorean: 'ÏÑúÎ∞îÏù¥Î∏å',
    theme: 'Escaping a sinking island',
    themeKorean: 'Í∞ÄÎùºÏïâÎäî ÏÑ¨ÏóêÏÑú ÌÉàÏ∂úÌïòÍ∏∞',
    description: 'Students act as citizens of Atlantis which is sinking into the ocean. Students need to escape the volcanic island by getting in boats, swimming, or riding dolphins. All the while, they can impede their opponents progress by use of sharks, whales, and sea monsters.',
    descriptionKorean: 'ÌïôÏÉùÎì§Ïù¥ Î∞îÎã§Î°ú Í∞ÄÎùºÏïâÍ≥† ÏûàÎäî ÏïÑÌãÄÎûÄÌã∞Ïä§Ïùò ÏãúÎØºÏù¥ ÎêòÏñ¥ Î≥¥Ìä∏Î•º ÌÉÄÍ±∞ÎÇò, ÏàòÏòÅÌïòÍ±∞ÎÇò, ÎèåÍ≥†ÎûòÎ•º ÌÉÄÍ≥† ÌôîÏÇ∞ÏÑ¨ÏóêÏÑú ÌÉàÏ∂úÌï¥Ïïº Ìï©ÎãàÎã§. ÎèôÏãúÏóê ÏÉÅÏñ¥, Í≥†Îûò, Î∞îÎã§ Í¥¥Î¨ºÏùÑ ÏÇ¨Ïö©Ìï¥ÏÑú ÏÉÅÎåÄÎ∞©Ïùò ÏßÑÌñâÏùÑ Î∞©Ìï¥Ìï† Ïàò ÏûàÏäµÎãàÎã§.',
    skills: ['English', 'Math', 'Probability', 'Social Awareness', 'Resource Management', 'Risk Management', 'Memory', 'Management of emotions', 'Teamwork', 'Negotiation'],
    vocabulary: ['beach', 'mountain', 'forest', 'volcano', 'boat', 'swim', 'shark', 'whale', 'sea monster', 'dolphin', 'take', 'eat'],
    grammar: ['present continuous', 'possessive pronouns', 'expressing immediate plans', 'expressing desires'],
    emoji: 'üåä',
    color: 'from-cyan-400 to-blue-600',
    available: true
  },
  {
    id: 'kites',
    title: 'Kites',
    titleKorean: 'Ïó∞ÎÇ†Î¶¨Í∏∞',
    theme: 'Flying kites for as long as possible',
    themeKorean: 'Í∞ÄÎä•Ìïú Ìïú Ïò§Îû´ÎèôÏïà Ïó∞ ÎÇ†Î¶¨Í∏∞',
    description: 'Students are kite flyers who need to work together to make sure the kites stay in the air. The kites are represented by sand timers which need to be continuously flowing.',
    descriptionKorean: 'ÌïôÏÉùÎì§Ïù¥ Ïó∞ÎÇ†Î¶¨Í∏∞ ÏÑ†ÏàòÍ∞Ä ÎêòÏñ¥ Ïó∞Ïù¥ ÌïòÎäòÏóê Í≥ÑÏÜç Îñ†ÏûàÎèÑÎ°ù Ìï®Íªò ÌòëÎ†•Ìï¥Ïïº Ìï©ÎãàÎã§. Ïó∞ÏùÄ Í≥ÑÏÜç ÌùòÎü¨Ïïº ÌïòÎäî Î™®ÎûòÏãúÍ≥ÑÎ°ú ÌëúÌòÑÎê©ÎãàÎã§.',
    skills: ['English', 'Communication', 'Time Management', 'Quick-Thinking', 'Social Awareness', 'Resource Management', 'Risk Management', 'Dexterity', 'Management of emotions', 'Teamwork'],
    vocabulary: ['(don\'t) have', 'Who', 'hurry', 'Does?', 'anyone', 'red', 'blue', 'purple', 'yellow', 'orange', 'white'],
    grammar: ['imperative', 'possessive pronouns', 'expressing immediate plans', 'expressing desires'],
    emoji: 'ü™Å',
    color: 'from-sky-400 to-blue-600',
    available: true
  }
];

interface LandingPageProps {
  onGameSelect: (gameId: string) => void;
}

export const LandingPage: React.FC<LandingPageProps> = ({ onGameSelect }) => {
  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-blue-50 to-green-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="container mx-auto px-4 py-6">
          <div className="text-center">
            <h1 className="text-4xl font-bold text-gray-800 mb-2">English Learning Games</h1>
            <p className="text-xl text-gray-600">ÏòÅÏñ¥ ÌïôÏäµ Í≤åÏûÑ Ïª¨Î†âÏÖò</p>
            <p className="text-gray-500 mt-2">Interactive games designed to help Korean students learn English through play</p>
          </div>
        </div>
      </div>

      {/* Games Grid */}
      <div className="container mx-auto px-4 py-12">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
          {games.map((game) => (
            <div
              key={game.id}
              className={`relative overflow-hidden rounded-2xl shadow-xl transition-all duration-300 hover:scale-105 hover:shadow-2xl ${
                game.available 
                  ? 'cursor-pointer transform hover:-translate-y-2' 
                  : 'opacity-75 cursor-not-allowed'
              }`}
              onClick={() => game.available && onGameSelect(game.id)}
            >
              {/* Background Gradient */}
              <div className={`absolute inset-0 bg-gradient-to-br ${game.color} opacity-90`}></div>
              
              {/* Content */}
              <div className="relative p-6 text-white">
                {/* Game Icon */}
                <div className="text-6xl mb-4 text-center">{game.emoji}</div>
                
                {/* Title */}
                <h3 className="text-2xl font-bold mb-2 text-center">{game.title}</h3>
                <p className="text-lg text-center mb-4 opacity-90">{game.titleKorean}</p>
                
                {/* Theme */}
                <div className="mb-4">
                  <h4 className="font-semibold mb-1">Theme:</h4>
                  <p className="text-sm opacity-90">{game.theme}</p>
                  <p className="text-xs opacity-75">{game.themeKorean}</p>
                </div>
                
                {/* Description */}
                <div className="mb-4">
                  <p className="text-sm opacity-90 leading-relaxed">{game.description}</p>
                </div>
                
                {/* Skills */}
                <div className="mb-4">
                  <h4 className="font-semibold mb-2 text-sm">Skills Developed:</h4>
                  <div className="flex flex-wrap gap-1">
                    {game.skills.slice(0, 4).map((skill, index) => (
                      <span
                        key={index}
                        className="bg-white bg-opacity-20 text-xs px-2 py-1 rounded-full"
                      >
                        {skill}
                      </span>
                    ))}
                    {game.skills.length > 4 && (
                      <span className="bg-white bg-opacity-20 text-xs px-2 py-1 rounded-full">
                        +{game.skills.length - 4} more
                      </span>
                    )}
                  </div>
                </div>
                
                {/* Key Vocabulary Preview */}
                <div className="mb-6">
                  <h4 className="font-semibold mb-2 text-sm">Key Vocabulary:</h4>
                  <div className="flex flex-wrap gap-1">
                    {game.vocabulary.slice(0, 3).map((word, index) => (
                      <span
                        key={index}
                        className="bg-white bg-opacity-30 text-xs px-2 py-1 rounded"
                      >
                        {word}
                      </span>
                    ))}
                    <span className="text-xs opacity-75">+{game.vocabulary.length - 3} more</span>
                  </div>
                </div>
                
                {/* Action Button */}
                <div className="text-center">
                  {game.available ? (
                    <button className="bg-white text-gray-800 font-semibold py-3 px-6 rounded-lg hover:bg-gray-100 transition-colors duration-200 shadow-lg">
                      Play Game
                    </button>
                  ) : (
                    <div className="bg-white bg-opacity-30 text-white font-semibold py-3 px-6 rounded-lg">
                      Coming Soon
                    </div>
                  )}
                </div>
                
                {/* Status Badge */}
                {!game.available && (
                  <div className="absolute top-4 right-4 bg-yellow-500 text-white text-xs font-bold px-3 py-1 rounded-full">
                    Coming Soon
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
        
        {/* Footer Info */}
        <div className="text-center mt-16">
          <div className="bg-white rounded-xl shadow-lg p-8 max-w-4xl mx-auto">
            <h2 className="text-2xl font-bold text-gray-800 mb-4">About Our Games</h2>
            <p className="text-gray-600 mb-4">
              Our educational games are designed specifically for Korean students learning English. 
              Each game combines language learning with strategic thinking, math skills, and cultural awareness.
            </p>
            <p className="text-gray-500 text-sm">
              Ïö∞Î¶¨Ïùò ÍµêÏú° Í≤åÏûÑÏùÄ ÏòÅÏñ¥Î•º Î∞∞Ïö∞Îäî ÌïúÍµ≠ ÌïôÏÉùÎì§ÏùÑ ÏúÑÌï¥ ÌäπÎ≥ÑÌûà ÏÑ§Í≥ÑÎêòÏóàÏäµÎãàÎã§. 
              Í∞Å Í≤åÏûÑÏùÄ Ïñ∏Ïñ¥ ÌïôÏäµÍ≥º Ï†ÑÎûµÏ†Å ÏÇ¨Í≥†, ÏàòÌïô Îä•Î†•, Î¨∏ÌôîÏ†Å Ïù∏ÏãùÏùÑ Í≤∞Ìï©Ìï©ÎãàÎã§.
            </p>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-8">
              <div className="text-center">
                <div className="text-3xl mb-2">üéØ</div>
                <h3 className="font-semibold text-gray-800">Educational Focus</h3>
                <p className="text-sm text-gray-600">Grammar, vocabulary, and practical English usage</p>
              </div>
              <div className="text-center">
                <div className="text-3xl mb-2">üéÆ</div>
                <h3 className="font-semibold text-gray-800">Interactive Learning</h3>
                <p className="text-sm text-gray-600">Engaging gameplay that makes learning fun</p>
              </div>
              <div className="text-center">
                <div className="text-3xl mb-2">üåè</div>
                <h3 className="font-semibold text-gray-800">Cultural Bridge</h3>
                <p className="text-sm text-gray-600">Korean language support and cultural context</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}; 